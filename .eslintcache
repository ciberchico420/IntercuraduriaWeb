[{"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\index.js":"1","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\App.js":"2","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Logo.js":"4","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\CircleManager.js":"5","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Circle.js":"6","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\ButtonCircle.js":"7","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\HomeManager.js":"8","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\content\\ContentManager.js":"9","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\content\\PageFromCategory.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":505,"mtime":1610084089490,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":173,"mtime":1610049887291,"results":"15","hashOfConfig":"12"},{"size":1038,"mtime":1608777114878,"results":"16","hashOfConfig":"12"},{"size":1264,"mtime":1608588512533,"results":"17","hashOfConfig":"12"},{"size":3508,"mtime":1609887604369,"results":"18","hashOfConfig":"12"},{"size":3864,"mtime":1610142955240,"results":"19","hashOfConfig":"12"},{"size":2012,"mtime":1610139464354,"results":"20","hashOfConfig":"12"},{"size":2208,"mtime":1610223967080,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"16rs0zo",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\index.js",[],["49","50"],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\App.js",[],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Logo.js",[],["51","52"],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\CircleManager.js",["53"],"import React, { useEffect } from 'react';\r\nimport Circle from './Circle';\r\nimport './main.scss'\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction CircleManager(props) {\r\n    var active = true;\r\n    var maxCircles = 4\r\n    var arr = {}\r\n    \r\n    if(active){\r\n       for (var a = 0; a < maxCircles; a++) {\r\n        var randX = getRandom(0,(window.innerWidth));\r\n        var randY = getRandom(0,(window.innerHeight));\r\n        arr[a] = { key: a, importance: getRandom(10,30), position: { x: randX, y: randY } ,isEmpty:getRandom(0,10)>=5?true:false};\r\n    } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            arr = {}\r\n        })\r\n    })\r\n    \r\n    return (\r\n        <div className=\"circleManager\">\r\n            {Object.keys(arr).map(function(key) {\r\n                return <Circle importance={arr[key].importance} position={arr[key].position} isEmpty={arr[key].isEmpty} key={key}></Circle>\r\n            })}\r\n        </div>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default CircleManager;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Circle.js",["54"],"import React, { useEffect, useState } from 'react';\r\nimport './main.scss'\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction Circle(props) {\r\n    var radius = (props.importance * window.innerWidth / 100)\r\n    var randTime = getRandom(6000, 10000);\r\n    const spring2 = useSpring({\r\n        to: async (next) => {\r\n            while (true) {\r\n                //(\r\n                var randX = getRandom(-120, window.innerWidth);\r\n                var randY = getRandom(-100, window.innerHeight);\r\n\r\n\r\n                await next({ left: randX, top: randY })\r\n              \r\n            }\r\n\r\n        }, from: { top: getRandom(-120, window.innerHeight), left: getRandom(-100, window.innerWidth) },\r\n        config: { duration:randTime,mass: 1, tension: 180, friction: 12 }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            console.log(\"Circle unmounted\")\r\n        })\r\n    })\r\n\r\n\r\n\r\n    var className = \"circle\";\r\n    if (props.isEmpty) {\r\n        className += \" empty\"\r\n    }\r\n\r\n\r\n    return (\r\n        <animated.div className={className} style={{ width: radius, height: radius, ...spring2 }}>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Circle;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\ButtonCircle.js",["55"],"import React, { useEffect, useState } from 'react'\r\nimport './main.scss'\r\nimport { useSpring, animated, config } from 'react-spring'\r\nimport { useLocation, useHistory } from 'react-router-dom'\r\n\r\nfunction ButtonCircle(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [fullyopen, setFullyOpen] = useState(false);\r\n    var className = \"circle \" + props.className;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n\r\n    const plus = 1.1;\r\n    const onMouseOver = (e) => {\r\n        if (!open) {\r\n            setScale({ scale: plus })\r\n        }\r\n\r\n    }\r\n    const onMouseLeave = (e) => {\r\n        setScale({ scale: 1 })\r\n    }\r\n    const openCircle = () => {\r\n        setOpen(true);\r\n        setFullyOpen(false);\r\n        history.push(`/${props.section}`)\r\n    }\r\n    const closeCircle = () => {\r\n        setOpen(false);\r\n        setFullyOpen(false)\r\n        history.push(\"/\")\r\n    }\r\n    const onClick = (e) => {\r\n        if (!open) {\r\n            openCircle()\r\n        } else {\r\n            closeCircle();\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setScale({ scale: 1 });\r\n        if (location.pathname === `/${props.section}`) {\r\n            setOpen(true);\r\n        }\r\n    })\r\n\r\n    const trans = (s) => `perspective(600px) scale(${s})`\r\n\r\n    var [spring, setScale] = useSpring(() => ({ scale: plus, from: { scale: 1 }, config: config.wobbly }));\r\n    const defaultStyle = {\r\n        borderRadius: 100 + \"%\",\r\n        width: props.size,\r\n        height: props.size,\r\n        left: props.left,\r\n        top: props.top,\r\n        border: 3,\r\n        opacityLabel: 1,\r\n        opacityContent: 0\r\n    };\r\n    const signoSize = open ? \"%\" : \"vw\"\r\n    const openSpring = useSpring({\r\n        to: async (next) => {\r\n            if (open) {\r\n                await next({ left: 0, top: 0, height: 100, width: 100, borderRadius: 0 + \"px\" })\r\n                await next({ opacityLabel: 0, opacityContent: 0, config: { duration: 500, ...config.stiff } })\r\n                setFullyOpen(true);\r\n                await next({ left: 0, top: 0, height: 100, width: 100, border: 0, config: { duration: 300, ...config.stiff } })\r\n                await next({ opacityContent: 1 })\r\n\r\n            } else {\r\n                await next({ ...defaultStyle })\r\n            }\r\n\r\n        }, from: { ...defaultStyle }, config: { ...config.stiff }\r\n    })\r\n\r\n\r\n\r\n    const style = {\r\n        transform: spring.scale !== undefined ? spring.scale.interpolate(trans) : \"none\",\r\n        cursor: !open ? 'pointer' : 'auto',\r\n        left: openSpring.left.interpolate((s) => `${s}%`),\r\n        top: openSpring.top.interpolate((s) => `${s}%`),\r\n        borderRadius: openSpring.borderRadius.interpolate((s) => `${s}`),\r\n        width: openSpring.width.interpolate((s) => `${s}${signoSize}`),\r\n        height: openSpring.height.interpolate((s) => `${s}${signoSize}`),\r\n        borderWidth: open ? 0 : 3,\r\n        zIndex: open ? 99 : \"auto\",\r\n        backgroundColor: fullyopen ? \"white\" : (props.empty ? \"white\" : \"#3d32bd\")\r\n    }\r\n\r\n\r\n    return (<animated.div native className={className} onMouseOver={onMouseOver} onClick={onClick} onMouseLeave={onMouseLeave} style={style}>\r\n        {!fullyopen ? <animated.div style={{ opacity: openSpring.opacityLabel }}>{props.buttonText}</animated.div> : undefined}\r\n        {fullyopen ? <animated.div style={{ opacity: openSpring.opacityContent }}>{props.children}</animated.div> : undefined}\r\n    </animated.div>)\r\n}\r\n\r\nexport default ButtonCircle;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\HomeManager.js",["56","57","58","59","60","61","62","63"],"import React, { useEffect, useState } from 'react'\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport ButtonCircle from '../ButtonCircle';\r\nimport '../main.scss'\r\nimport './home.scss'\r\nimport PageFromCategory from '../content/PageFromCategory';\r\nimport { useMediaQuery } from 'react-responsive'\r\nimport { useSpring, animated, config } from 'react-spring'\r\n\r\nimport Colors from '../exports.module.scss'\r\nimport { IoIosArrowDropdownCircle,IoIosMail} from 'react-icons/io';\r\nimport { GiSwordwoman} from 'react-icons/gi';\r\n\r\nfunction HomeManager(props) {\r\n\r\n    const isPortrait = useMediaQuery({ query: '(min-width: 600px)' })\r\n\r\n\r\n    return (<div className=\"homeContainer\">\r\n        <div className=\"sideMenu\">\r\n            <SideMenuItem>Nosotras <GiSwordwoman/></SideMenuItem>\r\n            <SideMenuItem>Contacto <IoIosMail/></SideMenuItem>\r\n\r\n\r\n        </div>\r\n\r\n        <div className=\"menu\">\r\n            <div className=\"logo\"><span>INTER</span><span>CURADURIA</span></div>\r\n            <div className=\"menuContainer\">\r\n                <MenuItem submenu={[\r\n                    { name: \"Cursos\" },\r\n                    { name: \"Talleres\" },\r\n                    { name: \"Seminarios\" },\r\n                    { name: \"Seminarios2\" },\r\n                    { name: \"Seminarios3\" },\r\n                ]\r\n                }>Programas\r\n                </MenuItem>\r\n                <MenuItem link=\"/textos\">Textos</MenuItem>\r\n                <MenuItem>Proyectos</MenuItem>\r\n                <MenuItem>Eventos</MenuItem>\r\n\r\n\r\n            </div >\r\n\r\n        </div>\r\n\r\n\r\n    </div>)\r\n}\r\nfunction MenuItem(props) {\r\n    const [toggle, setToggle] = useState(false);\r\n    const [click, setClick] = useState(false);\r\n    const fontSize = Colors.subMenuFontSize;\r\n\r\n    let history = useHistory();\r\n\r\n    const spring = useSpring({\r\n        to: async (next) => {\r\n            var subLeng = props.submenu !== undefined ? props.submenu.length : 0;\r\n            await next({\r\n                opacity: toggle ? 1 : 0,\r\n                width: toggle ? \"100%\" : \"0%\",\r\n                fontSize: click ? (Colors.subMenuFontSizeClick) + \"vh\" : fontSize + \"vh\",\r\n                fontColor: toggle ? Colors.mainColor : Colors.secondaryColor,\r\n                submenuHeight: \"0%\"\r\n            })\r\n\r\n            await next({ submenuHeight: (toggle || click) ? \"100%\" : \"0%\" })\r\n\r\n\r\n        }\r\n    })\r\n    return (\r\n        <animated.div className=\"menuItem\" onMouseOver={() => { setToggle(true) }} onMouseLeave={() => { setToggle(false); setClick(false) }} onClick={\r\n            () => { \r\n                setClick(true);  \r\n                if(props.link !== undefined){\r\n                    history.push(props.link)\r\n                    \r\n                }\r\n            }\r\n            }>\r\n            <animated.button className=\"menuItemButton\"\r\n                style={{ fontSize: spring.fontSize, color: spring.fontColor }}>\r\n                {props.children}\r\n\r\n            </animated.button>\r\n            {props.submenu !== undefined&&<IoIosArrowDropdownCircle  color={Colors.mainColor} style={{marginLeft:5}}/>}\r\n            <animated.div className=\"menuItemLine\" style={spring}></animated.div>\r\n\r\n            {props.submenu!== undefined&&<animated.div className=\"subMenu\" style={{height: spring.submenuHeight }}>\r\n                <animated.ul style={{height: spring.submenuHeight}}>\r\n                    {props.submenu !== undefined && props.submenu.map((val) => {\r\n\r\n                        return <li key={val.name}>\r\n                            {val.name}\r\n                        </li>\r\n                    })}\r\n                </animated.ul>\r\n\r\n            </animated.div>}\r\n\r\n        </animated.div>\r\n\r\n    )\r\n}\r\n\r\nfunction SideMenuItem(props) {\r\n    return (<div className=\"sideMenuItem\">\r\n        {props.children}\r\n    </div>)\r\n}\r\n\r\nexport default HomeManager;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\content\\ContentManager.js",["64","65","66"],"import React, { useEffect, useState } from 'react'\r\nimport '../main.scss'\r\nimport './content.scss'\r\nimport { useSpring, animated, config } from 'react-spring'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n    Switch,\r\n    useHistory,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport PageFromCategory from './PageFromCategory';\r\nimport {RiEyeCloseFill,RiCloseLine} from 'react-icons/ri'\r\n\r\n\r\nexport default function ContentManager(props) {\r\n    const location = useLocation()\r\n    console.log(location)\r\n    const [showContent, setShowContent] = useState(false);\r\n    const [inPage, setInPage] = useState(false);\r\n    const pages = [\r\n        { path: \"/textos\", child: <PageFromCategory category=\"2\" showContent={showContent} /> }\r\n    ]\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        pages.forEach(val => {\r\n            if (location.pathname === val.path) {\r\n                setInPage(true);\r\n                console.log(\"si\", inPage)\r\n            }else{\r\n                setInPage(false)\r\n                setShowContent(false)\r\n            }\r\n        })\r\n    })\r\n\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n       return history.listen((location) => { \r\n          console.log(`You changed the page to: ${location.pathname}`) \r\n         \r\n       }) \r\n    },[history]) \r\n\r\n    const spring = useSpring({\r\n        to: async (next) => {\r\n            var text = inPage ? \"0%\" : \"50%\";\r\n            await next({minHeight:inPage?\"100%\":\"0%\" })\r\n            await next({ transform: \"translate(0px,\" + text + \")\"})\r\n            \r\n            setShowContent(inPage);\r\n        },\r\n        \r\n    })\r\n    return (<animated.div className=\"content\" style={spring}>\r\n        <div className=\"closeContent\" onClick={()=>{history.push(\"/\")}}><RiEyeCloseFill/><RiCloseLine/></div>\r\n        {pages.map(val => {\r\n            return (\r\n                <Route path={val.path} key={val.path}>\r\n                    {val.child}\r\n                </Route>\r\n            );\r\n\r\n        })}\r\n\r\n\r\n    </animated.div>)\r\n}","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\content\\PageFromCategory.js",["67","68","69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"74","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":25,"column":19,"nodeType":"80","endLine":25,"endColumn":21},{"ruleId":"81","severity":1,"message":"82","line":1,"column":28,"nodeType":"83","messageId":"84","endLine":1,"endColumn":36},{"ruleId":"78","severity":1,"message":"85","line":43,"column":5,"nodeType":"83","endLine":43,"endColumn":14,"suggestions":"86"},{"ruleId":"81","severity":1,"message":"87","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":26},{"ruleId":"81","severity":1,"message":"88","line":2,"column":10,"nodeType":"83","messageId":"84","endLine":2,"endColumn":15},{"ruleId":"81","severity":1,"message":"89","line":2,"column":17,"nodeType":"83","messageId":"84","endLine":2,"endColumn":23},{"ruleId":"81","severity":1,"message":"90","line":3,"column":8,"nodeType":"83","messageId":"84","endLine":3,"endColumn":20},{"ruleId":"81","severity":1,"message":"91","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":24},{"ruleId":"81","severity":1,"message":"92","line":8,"column":31,"nodeType":"83","messageId":"84","endLine":8,"endColumn":37},{"ruleId":"81","severity":1,"message":"93","line":16,"column":11,"nodeType":"83","messageId":"84","endLine":16,"endColumn":21},{"ruleId":"81","severity":1,"message":"94","line":60,"column":17,"nodeType":"83","messageId":"84","endLine":60,"endColumn":24},{"ruleId":"81","severity":1,"message":"92","line":4,"column":31,"nodeType":"83","messageId":"84","endLine":4,"endColumn":37},{"ruleId":"81","severity":1,"message":"95","line":6,"column":22,"nodeType":"83","messageId":"84","endLine":6,"endColumn":28},{"ruleId":"81","severity":1,"message":"89","line":8,"column":5,"nodeType":"83","messageId":"84","endLine":8,"endColumn":11},{"ruleId":"81","severity":1,"message":"96","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":19},{"ruleId":"81","severity":1,"message":"97","line":4,"column":21,"nodeType":"83","messageId":"84","endLine":4,"endColumn":29},{"ruleId":"81","severity":1,"message":"98","line":9,"column":12,"nodeType":"83","messageId":"84","endLine":9,"endColumn":17},{"ruleId":"81","severity":1,"message":"99","line":10,"column":12,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"78","severity":1,"message":"100","line":26,"column":8,"nodeType":"101","endLine":26,"endColumn":10,"suggestions":"102"},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],["103"],["104"],"react-hooks/exhaustive-deps","Assignments to the 'arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [setScale, location.pathname, props.section] as a second argument to the useEffect Hook.",["105"],"'useEffect' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'ButtonCircle' is defined but never used.","'PageFromCategory' is defined but never used.","'config' is defined but never used.","'isPortrait' is assigned a value but never used.","'subLeng' is assigned a value but never used.","'Router' is defined but never used.","'useSpring' is defined but never used.","'animated' is defined but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.category'. Either include it or remove the dependency array.","ArrayExpression",["106"],"no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Add dependencies array: [setScale, location.pathname, props.section]",{"range":"111","text":"112"},"Update the dependencies array to be: [props.category]",{"range":"113","text":"114"},[1229,1229],", [setScale, location.pathname, props.section]",[922,924],"[props.category]"]