[{"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\index.js":"1","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\App.js":"2","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\reportWebVitals.js":"3","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Logo.js":"4","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\CircleManager.js":"5","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Circle.js":"6","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\ButtonCircle.js":"7","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\HomeManager.js":"8","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\pages\\PageFromCategory.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":435,"mtime":1608659946803,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":343,"mtime":1608573002445,"results":"14","hashOfConfig":"11"},{"size":1053,"mtime":1608609377516,"results":"15","hashOfConfig":"11"},{"size":1264,"mtime":1608588512533,"results":"16","hashOfConfig":"11"},{"size":3388,"mtime":1608660475694,"results":"17","hashOfConfig":"11"},{"size":755,"mtime":1608660061298,"results":"18","hashOfConfig":"11"},{"size":1525,"mtime":1608679618402,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16rs0zo",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\index.js",[],["41","42"],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\App.js",[],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\reportWebVitals.js",[],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Logo.js",[],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\CircleManager.js",["43"],"import React, { useEffect } from 'react';\r\nimport Circle from './Circle';\r\nimport './main.scss'\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction CircleManager(props) {\r\n    var active = true;\r\n    var maxCircles = getRandom(6,12);\r\n    var arr = {}\r\n    \r\n    if(active){\r\n       for (var a = 0; a < maxCircles; a++) {\r\n        var randX = getRandom(0,(window.innerWidth));\r\n        var randY = getRandom(0,(window.innerHeight));\r\n        arr[a] = { key: a, importance: getRandom(10,30), position: { x: randX, y: randY } ,isEmpty:getRandom(0,10)>=5?true:false};\r\n    } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            arr = {}\r\n        })\r\n    })\r\n    \r\n    return (\r\n        <div className=\"circleManager\">\r\n            {Object.keys(arr).map(function(key) {\r\n                return <Circle importance={arr[key].importance} position={arr[key].position} isEmpty={arr[key].isEmpty} key={key}></Circle>\r\n            })}\r\n        </div>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default CircleManager;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\Circle.js",["44"],"import React, { useEffect, useState } from 'react';\r\nimport './main.scss'\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction Circle(props) {\r\n    var radius = (props.importance * window.innerWidth / 100)\r\n    var randTime = getRandom(6000, 10000);\r\n    const spring2 = useSpring({\r\n        to: async (next) => {\r\n            while (true) {\r\n                //(\r\n                var randX = getRandom(-120, window.innerWidth);\r\n                var randY = getRandom(-100, window.innerHeight);\r\n\r\n\r\n                await next({ left: randX, top: randY })\r\n              \r\n            }\r\n\r\n        }, from: { top: getRandom(-120, window.innerHeight), left: getRandom(-100, window.innerWidth) },\r\n        config: { duration:randTime,mass: 1, tension: 180, friction: 12 }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            console.log(\"Circle unmounted\")\r\n        })\r\n    })\r\n\r\n\r\n\r\n    var className = \"circle\";\r\n    if (props.isEmpty) {\r\n        className += \" empty\"\r\n    }\r\n\r\n\r\n    return (\r\n        <animated.div className={className} style={{ width: radius, height: radius, ...spring2 }}>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Circle;","C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\ButtonCircle.js",["45"],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\HomeManager.js",["46","47"],"C:\\xampp\\htdocs\\c\\Intercuraduria\\web\\src\\components\\home\\pages\\PageFromCategory.js",["48","49","50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":25,"column":19,"nodeType":"57","endLine":25,"endColumn":21},{"ruleId":"58","severity":1,"message":"59","line":1,"column":28,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"62","line":37,"column":5,"nodeType":"60","endLine":37,"endColumn":14,"suggestions":"63"},{"ruleId":"58","severity":1,"message":"64","line":2,"column":10,"nodeType":"60","messageId":"61","endLine":2,"endColumn":15},{"ruleId":"58","severity":1,"message":"65","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":23},{"ruleId":"58","severity":1,"message":"66","line":6,"column":12,"nodeType":"60","messageId":"61","endLine":6,"endColumn":17},{"ruleId":"58","severity":1,"message":"67","line":7,"column":12,"nodeType":"60","messageId":"61","endLine":7,"endColumn":20},{"ruleId":"55","severity":1,"message":"68","line":26,"column":8,"nodeType":"69","endLine":26,"endColumn":10,"suggestions":"70"},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","Assignments to the 'arr' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","ObjectExpression","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","React Hook useEffect contains a call to 'setOpen'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [setScale, location.pathname, props.section] as a second argument to the useEffect Hook.",["73"],"'Route' is defined but never used.","'Switch' is defined but never used.","'error' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.category'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},"Add dependencies array: [setScale, location.pathname, props.section]",{"range":"79","text":"80"},"Update the dependencies array to be: [props.category]",{"range":"81","text":"82"},[1119,1119],", [setScale, location.pathname, props.section]",[1025,1027],"[props.category]"]