{"version":3,"sources":["components/Logo.js","components/Circle.js","components/CircleManager.js","components/ButtonCircle.js","components/home/pages/PageFromCategory.js","components/home/HomeManager.js","App.js","reportWebVitals.js","index.js"],"names":["Logo","className","getRandom","min","max","Math","random","Circle","props","radius","importance","window","innerWidth","randTime","spring2","useSpring","to","next","a","randX","randY","innerHeight","left","top","from","config","duration","mass","tension","friction","useEffect","console","log","isEmpty","div","style","width","height","CircleManager","maxCircles","arr","key","position","x","y","Object","keys","map","ButtonCircle","useState","open","setOpen","fullyopen","setFullyOpen","location","useLocation","history","useHistory","setScale","scale","pathname","section","wobbly","spring","defaultStyle","borderRadius","size","border","opacityLabel","opacityContent","signoSize","openSpring","stiff","transform","undefined","interpolate","s","cursor","borderWidth","zIndex","backgroundColor","empty","native","onMouseOver","e","onClick","push","onMouseLeave","opacity","buttonText","children","PageFromCategory","setError","setIsLoaded","items","setItems","fetch","category","then","res","json","result","error","value","id","ReactHtmlParser","title","rendered","content","HomeManager","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f12e7114.chunk.js","sourcesContent":["import React from 'react'\r\nimport './main.scss'\r\n\r\n/*class Logo extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <img src={logo} alt=\"logo\" className=\"logo\"></img>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}*/\r\n\r\nfunction Logo(){\r\nreturn (<div className=\"logo\"></div>)\r\n}\r\n\r\nexport default Logo;","import React, { useEffect, useState } from 'react';\r\nimport './main.scss'\r\nimport { useSpring, animated } from 'react-spring';\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction Circle(props) {\r\n    var radius = (props.importance * window.innerWidth / 100)\r\n    var randTime = getRandom(6000, 10000);\r\n    const spring2 = useSpring({\r\n        to: async (next) => {\r\n            while (true) {\r\n                //(\r\n                var randX = getRandom(-120, window.innerWidth);\r\n                var randY = getRandom(-100, window.innerHeight);\r\n\r\n\r\n                await next({ left: randX, top: randY })\r\n              \r\n            }\r\n\r\n        }, from: { top: getRandom(-120, window.innerHeight), left: getRandom(-100, window.innerWidth) },\r\n        config: { duration:randTime,mass: 1, tension: 180, friction: 12 }\r\n    })\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            console.log(\"Circle unmounted\")\r\n        })\r\n    })\r\n\r\n\r\n\r\n    var className = \"circle\";\r\n    if (props.isEmpty) {\r\n        className += \" empty\"\r\n    }\r\n\r\n\r\n    return (\r\n        <animated.div className={className} style={{ width: radius, height: radius, ...spring2 }}>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Circle;","import React, { useEffect } from 'react';\r\nimport Circle from './Circle';\r\nimport './main.scss'\r\n\r\nfunction getRandom(min, max) {\r\n    return Math.random() * (max - min) + min;\r\n}\r\n\r\n\r\nfunction CircleManager(props) {\r\n    var active = true;\r\n    var maxCircles = getRandom(6,12);\r\n    var arr = {}\r\n    \r\n    if(active){\r\n       for (var a = 0; a < maxCircles; a++) {\r\n        var randX = getRandom(0,(window.innerWidth));\r\n        var randY = getRandom(0,(window.innerHeight));\r\n        arr[a] = { key: a, importance: getRandom(10,30), position: { x: randX, y: randY } ,isEmpty:getRandom(0,10)>=5?true:false};\r\n    } \r\n    }\r\n\r\n    useEffect(()=>{\r\n        return(()=>{\r\n            arr = {}\r\n        })\r\n    })\r\n    \r\n    return (\r\n        <div className=\"circleManager\">\r\n            {Object.keys(arr).map(function(key) {\r\n                return <Circle importance={arr[key].importance} position={arr[key].position} isEmpty={arr[key].isEmpty} key={key}></Circle>\r\n            })}\r\n        </div>\r\n       \r\n    );\r\n\r\n}\r\n\r\nexport default CircleManager;","import React, { useEffect, useState } from 'react'\r\nimport './main.scss'\r\nimport { useSpring, animated, config } from 'react-spring'\r\nimport {useLocation,useHistory} from 'react-router-dom'\r\n\r\nfunction ButtonCircle(props) {\r\n    const [open, setOpen] = useState(false);\r\n    const [fullyopen, setFullyOpen] = useState(false);\r\n    var className = \"circle \" + props.className;\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    console.log(location)\r\n\r\n\r\n    const plus = 1.1;\r\n    const onMouseOver = (e) => {\r\n        if (!open) {\r\n            setScale({ scale: plus })\r\n        }\r\n\r\n    }\r\n    const onMouseLeave = (e) => {\r\n        setScale({ scale: 1 })\r\n    }\r\n    const onClick = (e) => {\r\n         if (!open) {\r\n            setOpen(true);\r\n            history.push(`/${props.section}`)\r\n         }else{\r\n             setOpen(false);\r\n             setFullyOpen(false)\r\n            history.push(\"/\")\r\n         }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        setScale({ scale: 1 });\r\n        if(location.pathname === `/${props.section}`){\r\n            setOpen(true);\r\n        }\r\n    })\r\n\r\n    const trans = (s) => `perspective(600px) scale(${s})`\r\n\r\n    var [spring, setScale] = useSpring(() => ({ scale: plus, from: { scale: 1 }, config: config.wobbly }));\r\n    const defaultStyle = {\r\n        borderRadius: 100 + \"%\",\r\n        width: props.size,\r\n        height: props.size,\r\n        left: props.left,\r\n        top: props.top,\r\n        border: 3,\r\n        opacityLabel: 1,\r\n        opacityContent: 0\r\n    };\r\n    const signoSize = open ? \"%\" : \"vw\"\r\n    const openSpring = useSpring({\r\n        to: async (next) => {\r\n            if (open) {\r\n                await next({ left: 0, top: 0,height:100,width:100,borderRadius: 0 + \"px\"})\r\n                await next({  opacityLabel: 0,opacityContent: 0,config:{duration:500,...config.stiff} })\r\n                setFullyOpen(true);\r\n                await next({ left: 0, top: 0, height: 100,width:100,  border: 0 ,config:{duration:300,...config.stiff}})\r\n                await next({opacityContent: 1})\r\n              \r\n            } else {\r\n                await next({ ...defaultStyle })\r\n            }\r\n\r\n        }, from: { ...defaultStyle }, config: {  ...config.stiff }\r\n    })\r\n\r\n\r\n\r\n    const style = {\r\n        transform: spring.scale !== undefined ? spring.scale.interpolate(trans) : \"none\",\r\n        cursor: !open ? 'pointer' : 'auto',\r\n        left: openSpring.left.interpolate((s) => `${s}%`),\r\n        top: openSpring.top.interpolate((s) => `${s}%`),\r\n        borderRadius: openSpring.borderRadius.interpolate((s) => `${s}`),\r\n        width: openSpring.width.interpolate((s) => `${s}${signoSize}`),\r\n        height: openSpring.height.interpolate((s) => `${s}${signoSize}`),\r\n        borderWidth: open?0:3,\r\n        zIndex: open ? 99 : \"auto\",\r\n        backgroundColor: fullyopen ? \"white\" : (props.empty ? \"white\" : \"#5934E0\")\r\n    }\r\n\r\n\r\n    return (<animated.div native className={className} onMouseOver={onMouseOver} onClick={onClick} onMouseLeave={onMouseLeave} style={style}>\r\n        {!fullyopen ? <animated.div style={{ opacity: openSpring.opacityLabel }}>{props.buttonText}</animated.div> : undefined}\r\n        {fullyopen ? <animated.div style={{ opacity: openSpring.opacityContent }}>{props.children}</animated.div> : undefined}\r\n    </animated.div>)\r\n}\r\n\r\nexport default ButtonCircle;","import React, { useEffect, useState } from 'react'\r\nimport '../home.scss'\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nexport default function PageFromCategory(props) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    useEffect(() => {\r\n        fetch(\"http://drokt.com/blog/wp-json/wp/v2/posts?categories=\"+props.category)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    //setIsLoaded(true);\r\n                    setItems(result);\r\n                },\r\n                // Nota: es importante manejar errores aquí y no en \r\n                // un bloque catch() para que no interceptemos errores\r\n                // de errores reales en los componentes.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                    console.log(\"error\", error)\r\n                }\r\n            )\r\n    }, [])\r\n    return (<div className=\"cursosContainer\" style={{}}>{items.map(value => {\r\n        console.log(value)\r\n        return (<main id=\"site-content\" key={value.id}><article>\r\n            <header className=\"entry-header has-text-aling-center\"><h2 className=\"entry-title\">{ReactHtmlParser(value.title.rendered)}</h2></header>\r\n            <div className=\"post-inner thin\">\r\n            {ReactHtmlParser(value.content.rendered)}\r\n            </div>\r\n            </article></main>)\r\n    })}</div>)\r\n}","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport ButtonCircle from '../ButtonCircle';\r\nimport '../main.scss'\r\nimport './home.scss'\r\nimport PageFromCategory from './pages/PageFromCategory';\r\n\r\nfunction HomeManager(props) {\r\n    return (<div className=\"\">\r\n        \r\n        <ButtonCircle className=\"cursosButton\" empty={true} section=\"cursos\" buttonText=\"CURSOS\" size={30} top={30} left={3}><PageFromCategory category=\"2\"></PageFromCategory></ButtonCircle>\r\n       <ButtonCircle className=\"nosotrasButton\" empty={false} section=\"nosotras\" buttonText=\"NOSOTRAS\" size={10} top={10} left={80}><PageFromCategory category=\"3\"></PageFromCategory></ButtonCircle>\r\n        \r\n      \r\n    </div>)\r\n}\r\n\r\nexport default HomeManager;","\nimport './App.css';\nimport Logo from './components/Logo'\nimport CircleManager from './components/CircleManager'\nimport HomeManager from './components/home/HomeManager';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router> \n     <Logo/>\n     <CircleManager></CircleManager>\n     <HomeManager></HomeManager>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}